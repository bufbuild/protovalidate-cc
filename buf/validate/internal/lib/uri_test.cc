// Copyright 2023-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "buf/validate/internal/lib/uri.h"

#include "gtest/gtest.h"

namespace buf::validate::internal::lib {
namespace {

struct URIValidateTestCase {
  std::string name;
  bool valid;
  std::string input;
};

class URIValidateTestSuite : public ::testing::TestWithParam<URIValidateTestCase> {};

TEST_P(URIValidateTestSuite, Parse) {
  auto param = GetParam();
  EXPECT_EQ(validateUri(param.input), param.valid);
}

using T = URIValidateTestCase;
INSTANTIATE_TEST_SUITE_P(
    URIValidateTest,
    URIValidateTestSuite,
    ::testing::Values(
        T{"Example", true, "https://example.com"},
        T{"ExampleWithPathSegment", true, "https://example.com/foo"},
        T{"ExampleWithPathSegments", true, "https://example.com/foo/bar"},
        T{"ExampleWithPathQueryFragment", true, "https://example.com/foo/bar?baz=quux#frag"},
        T{"ExampleWithUserinfo", true, "https://joe@example.com/foo"},
        T{"EmptyString", false, ""},
        T{"Space", false, " "},
        T{"LeadingSpace", false, " https://example.com"},
        T{"TrailingSpace", false, "https://example.com "},
        T{"RelativeRef", false, "./"},
        T{"RelativeRefWithAuthority", false, "//example.com/foo"},
        T{"Extreme",
          true,
          "scheme0123456789azAZ+-.://userinfo0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~!$&'()*+,;=::@host!$&'()*+,;=._~0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789/path0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20//foo/?query0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?#fragment0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        T{"SchemeFtp", true, "ftp://example.com"},
        T{"SchemeExhaust", true, "foo0123456789azAZ+-.://example.com"},
        T{"SchemeA", false, "1foo://example.com"},
        T{"SchemeB", false, "-foo://example.com"},
        T{"SchemeC", false, ".foo://example.com"},
        T{"SchemeD", false, ":foo://example.com"},
        T{"SchemeE", false, "foo%20bar://example.com"},
        T{"SchemeF", false, "foo\037bar://example.com"},
        T{"SchemeG", false, "foo^bar://example.com"},
        T{"UserinfoName", true, "https://user@example.com"},
        T{"UserinfoNamePassword", true, "https://user:password@example.com"},
        T{"UserinfoPctEncodedAscii", true, "https://%61%20%23@example.com"},
        T{"UserinfoPctEncodedUtf8", true, "https://%c3%963@example.com"},
        T{"UserinfoPctEncodedInvalidUtf8", true, "https://%c3x%963@example.com"},
        T{"UserinfoUnreserved",
          true,
          "https://0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~@example.com"},
        T{"UserinfoSubDelims", true, "https://!$&'()*+,;=@example.com"},
        T{"UserinfoExtra", true, "https://:@example.com"},
        T{"UserinfoMultipleColons", true, "https://:::@example.com"},
        T{"UserinfoReservedSlashParsesAsPathAbempty", true, "https:///@example.com"},
        T{"UserinfoReservedQuestionmarkParsesAsQuery", true, "https://?@example.com"},
        T{"UserinfoReservedHashParsesAsFragment", true, "https://#@example.com"},
        T{"UserinfoReservedSquareBracketOpen", false, "https://[@example.com"},
        T{"UserinfoReservedSquareBracketClose", false, "https://]@example.com"},
        T{"UserinfoReservedAt", false, "https://@@example.com"},
        T{"UserinfoBadPctEncodedA", false, "https://%@example.com"},
        T{"UserinfoBadPctEncodedB", false, "https://%2x@example.com"},
        T{"UserinfoExhaust",
          true,
          "https://0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~!$&'()*+,;=::@example.com"},
        T{"UserinfoControlCharacter", false, "https://\x1F@example.com"},
        T{"UserinfoCaret", false, "https://^@example.com"},
        T{"HostRegName", true, "https://foo"},
        T{"HostRegNameExhaust",
          true,
          "https://!$&'()*+,;=._~0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"},
        T{"HostRegNameEmpty", true, "https://:8080"},
        T{"HostRegNamePctEncodedAscii", true, "https://foo%61%20%23"},
        T{"HostRegNamePctEncodedUtf8", true, "https://foo%c3%96"},
        T{"HostRegNamePctEncodedInvalidUtf8", false, "https://foo%c3x%96"},
        T{"HostRegNameBadPctEncodedA", false, "https://foo%"},
        T{"HostRegNameBadPctEncodedB", false, "https://foo%2x"},
        T{"HostIpv4", true, "https://127.0.0.1"},
        T{"HostIp4vBadOctet", true, "https://256.0.0.1"},
        T{"HostIpv6", true, "https://[2001:0db8:85a3:0000:0000:8a2e:0370:7334]"},
        T{"HostIpv6A", false, "https://2001:0db8:85a3:0000:0000:8a2e:0370:7334"},
        T{"HostIpv6B", false, "https://[2001::0370::7334]"},
        T{"HostIpfutureShort", true, "https://[v1.x]"},
        T{"HostIpfutureLong", true, "https://[v1234AF.x]"},
        T{"HostIpfutureExhaust",
          true,
          "https://[vF.-!$&'()*+,;=._~0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]"},
        T{"HostIpfuture", false, "https://[v1x]"},
        T{"HostA", false, "https://\x1F.com"},
        T{"HostB", false, "https://^.com"},
        T{"HostC", false, "https://foo@你好.com"},
        T{"HostIpv6ZoneId", true, "https://[::1%25eth0]"},
        T{"HostIpv6ZoneIdPctEncodedAscii", true, "https://[::1%25foo%61%20%23]"},
        T{"HostIpv6ZoneIdPctEncodedUtf8", true, "https://[::1%25foo%c3%96]"},
        T{"HostIpv6ZoneIdPctEncodedInvalidUtf8", false, "https://[::1%25foo%c3x%96]"},
        T{"HostIpv6ZoneIdEmpty", false, "https://[::1%25]"},
        T{"HostIpv6ZoneIdUnquoted", false, "https://[::1%eth0]"},
        T{"HostIpv6ZoneIdBadPctEncodedA", false, "https://[::1%25foo%]"},
        T{"HostIpv6ZoneIdBadPctEncodedB", false, "https://[::1%25foo%2x]"},
        T{"Port8080", true, "https://example.com:8080"},
        T{"Port65535", true, "https://example.com:65535"},
        T{"Port65536", true, "https://example.com:65536"},
        T{"Port0", true, "https://example.com:0"},
        T{"Port1", true, "https://example.com:1"},
        T{"PortEmpty", true, "https://example.com:"},
        T{"PortEmptyRegNameEmpty", true, "https://:"},
        T{"PortA", false, "https://example.com:8a"},
        T{"PortB", false, "https://example.com:x"},
        T{"PortC", false, "https://example.com: 1"},
        T{"PathSimple", true, "https://example.com/foo"},
        T{"PathSimpleNested", true, "https://example.com/foo/bar"},
        T{"PathSimpleNestedTrailingSlash", true, "https://example.com/foo/bar/"},
        T{"PathAbsolute", true, "foo:/nz"},
        T{"PathAbsoluteWithSegment", true, "foo:/nz/a"},
        T{"PathAbsoluteWithSegments", true, "foo:/nz//segment//segment/"},
        T{"PathAbsoluteWithEmptyPchar", true, "foo:/nz/"},
        T{"PathAbsoluteSegmentNzBadCaret", false, "foo:/^"},
        T{"PathAbsoluteSegmentNzBadControlCharacter", false, "foo:/\x1F"},
        T{"PathAbsoluteSegmentNzBadPctEncoded", false, "foo:/%x"},
        T{"PathAbsoluteSegmentNzPctEncodedAscii", true, "foo:/%61%20%23"},
        T{"PathAbsoluteSegmentNzPctEncodedUtf8", true, "foo:/%c3%96"},
        T{"PathAbsoluteSegmentNzPctEncodedInvalidUtf8", true, "foo:/%c3x%96"},
        T{"PathAbsoluteExhaustSegment",
          true,
          "foo:/nz/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20"},
        T{"PathAbsoluteSegmentBadCaret", false, "foo:/nz/^"},
        T{"PathAbsoluteSegmentBadControlCharacter", false, "foo:/nz/\x1F"},
        T{"PathAbsoluteSegmentBadPctEncoded", false, "foo:/nz/%x"},
        T{"PathAbsoluteSegmentPctEncodedAscii", true, "foo:/nz/%61%20%23"},
        T{"PathAbsoluteSegmentPctEncodedUtf8", true, "foo:/nz/%c3%96%c3"},
        T{"PathAbsoluteSegmentPctEncodedInvalidUtf8", true, "foo:/nz/%c3x%96"},
        T{"PathAbsoluteExhaustSegmentNz",
          true,
          "foo:/@%20!$&()*+,;=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~:"},
        T{"PathAbsoluteWithQueryAndFragment", true, "foo:/nz?q#f"},
        T{"PathRootless", true, "foo:nz"},
        T{"PathRootlessWithSegment", true, "foo:nz/a"},
        T{"PathRootlessWithSegments", true, "foo:nz//segment//segment/"},
        T{"PathRootlessSegmentEmptyPchar", true, "foo:nz/"},
        T{"PathRootlessSegmentNzBadCaret", false, "foo:^"},
        T{"PathRootlessSegmentNzBadControlCharacter", false, "foo:\x1F"},
        T{"PathRootlessSegmentNzBadPctEncoded", false, "foo:%x"},
        T{"PathRootlessSegmentNzPctEncodedAscii", true, "foo:%61%20%23"},
        T{"PathRootlessSegmentNzPctEncodedUtf8", true, "foo:%c3%96"},
        T{"PathRootlessSegmentNzPctEncodedInvalidUtf8", true, "foo:%c3x%96"},
        T{"PathRootlessSegmentNzExhaust",
          true,
          "foo:@%20!$&()*+,;=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~:"},
        T{"PathRootlessSegmentBadCaret", false, "foo:nz/^"},
        T{"PathRootlessSegmentBadControlCharacter", false, "foo:nz/\x1F"},
        T{"PathRootlessSegmentBadPctEncoded", false, "foo:nz/%x"},
        T{"PathRootlessSegmentPctEncodedAscii", true, "foo:nz/%61%20%23"},
        T{"PathRootlessSegmentPctEncodedUtf8", true, "foo:nz/%c3%96"},
        T{"PathRootlessSegmentPctEncodedInvalidUtf8", true, "foo:nz/%c3x%96"},
        T{"PathRootlessSegmentExhaust",
          true,
          "foo:nz/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20"},
        T{"PathRootlessWithQueryAndFragment", true, "foo:nz?q#f"},
        T{"PathEmpty", true, "foo:"},
        T{"PathEmptyWithQueryAndFragment", true, "foo:?q#f"},
        T{"AuthorityPathAbempty", true, "foo://example.com"},
        T{"AuthorityPathAbemptyWithSegment", true, "foo://example.com/a"},
        T{"AuthorityPathAbemptyWithSegments", true, "foo://example.com/segment//segment/"},
        T{"AuthorityPathAbemptySegmentEmptyPchar", true, "foo://example.com/"},
        T{"AuthorityPathAbemptySegmentBadCaret", false, "foo://example.com/^"},
        T{"AuthorityPathAbemptySegmentBadControlCharacter", false, "foo://example.com/\x1F"},
        T{"AuthorityPathAbemptySegmentBadPctEncoded", false, "foo://example.com/%x"},
        T{"AuthorityPathAbemptySegmentPctEncodedAscii", true, "foo://example.com/%61%20%23"},
        T{"AuthorityPathAbemptySegmentPctEncodedUtf8", true, "foo://example.com/%c3%96"},
        T{"AuthorityPathAbemptySegmentPctEncodedInvalidUtf8", true, "foo://example.com/%c3x%96"},
        T{"AuthorityPathAbemptySegmentExhaust",
          true,
          "foo://example.com/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20"},
        T{"AuthorityPathAbemptyWithQueryAndFragment",
          true,
          "foo://example.com/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20"},
        T{"Query", true, "https://example.com?baz=quux"},
        T{"QueryPctEncodedAscii", true, "https://example.com?%61%20%23"},
        T{"QueryPctEncodedUtf8", true, "https://example.com?%c3%96%c3"},
        T{"QueryPctEncodedInvalidUtf8", true, "https://example.com?%c3x%96"},
        T{"QueryBadPctEncoded", false, "https://example.com?%2x"},
        T{"QueryBadControlCharacter", false, "https://example.com?\x1F"},
        T{"QueryBadCaret", false, "https://example.com?^"},
        T{"QuerySubDelims", true, "https://example.com?!$&'()*+,="},
        T{"QuerySubDelimSemicolon", true, "https://example.com?;"},
        T{"QueryPcharExtra", true, "https://example.com?:@"},
        T{"QueryExtra", true, "https://example.com?/?"},
        T{"QueryUnusualKeyValueStructure", true, "https://example.com?a=b&c&&=1&=="},
        T{"QueryExhaust",
          true,
          "https://example.com?0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?"},
        T{"Fragment", true, "https://example.com?#frag"},
        T{"FragmentPctEncodedAscii", true, "https://example.com#%61%20%23"},
        T{"FragmentPctEncodedUtf8", true, "https://example.com#%c3%96"},
        T{"FragmentPctEncodedInvalidUtf8", true, "https://example.com#%c3x%96"},
        T{"FragmentBadPctEncodedA", false, "https://example.com#%2x"},
        T{"FragmentBadPctEncodedB", false, "https://example.com#%"},
        T{"FragmentSubDelims", true, "https://example.com#!$&'()*+,;="},
        T{"FragmentPcharExtra", true, "https://example.com#/?"},
        T{"FragmentBadHash", false, "https://example.com##"},
        T{"FragmentBadCaret", false, "https://example.com#^"},
        T{"FragmentBadControlCharacter", false, "https://example.com#\x1F"},
        T{"FragmentExhaust",
          true,
          "https://example.com/#0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        T{"HostEmptyRegName", true, "A://"}),
    [](const auto& info) { return info.param.name; });

struct URIReferenceValidateTestCase {
  std::string name;
  bool valid;
  std::string input;
};

class URIReferenceValidateTestSuite
    : public ::testing::TestWithParam<URIReferenceValidateTestCase> {};

TEST_P(URIReferenceValidateTestSuite, Parse) {
  auto param = GetParam();
  EXPECT_EQ(validateUriReference(param.input), param.valid);
}

using U = URIReferenceValidateTestCase;
INSTANTIATE_TEST_SUITE_P(
    URIReferenceValidateTest,
    URIReferenceValidateTestSuite,
    ::testing::Values(
        U{"PathNoschemeWithSegment", true, "./foo"},
        U{"PathNoschemeWithSegmentQueryFragment", true, "./foo/bar?baz=quux#frag"},
        U{"EmptyString", true, ""},
        U{"Extreme",
          true,
          "//userinfo0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~!$&'()*+,;=::@host!$&'()*+,;=._~0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789/path0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20//foo/?query0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?#fragment0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        U{"Space", false, " "},
        U{"LeadingSpace", false, " ./foo"},
        U{"TrailingSpace", false, "./foo "},
        U{"BadRelativePart", false, ":"},
        U{"UriWithBadScheme", false, "1foo://example.com"},
        U{"AuthorityPathAbempty", true, "//host"},
        U{"AuthorityPathAbemptyWithSegmentQueryFragment", true, "//host/foo?baz=quux#frag"},
        U{"AuthorityPathAbemptySegmentEmptyPchar", true, "//host/"},
        U{"AuthorityPathAbemptySegmentBadControlCharacter", false, "//host/\x1F"},
        U{"PathAbemptySegmentBadPctEncoded", false, "//host/%x"},
        U{"PathAbemptySegmentPctEncodedAscii", true, "//host/%61%20%23"},
        U{"PathAbemptySegmentPctEncodedUtf8", true, "//host/%c3%96"},
        U{"PathAbemptySegmentPctEncodedInvalidUtf8", true, "//host/%c3x%96"},
        U{"PathAbemptyExhaustSegment",
          true,
          "//host/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&()*+,;=:@"},
        U{"PathAbemptyMultipleSegmentsA", true, "//host//"},
        U{"PathAbemptyMultipleSegmentsB", true, "//host/a/b/c"},
        U{"PathAbemptyMultipleSegmentsC", true, "//host/a/b/c/"},
        U{"PathAbemptyWithQueryA", true, "//host?baz=quux"},
        U{"PathAbemptyWithQueryB", true, "//host/foo/bar?baz=quux"},
        U{"PathAbemptyWithFragmentA", true, "//host#frag"},
        U{"PathAbemptyWithFragmentB", true, "//host/foo/bar#frag"},
        U{"PathAbemptyExhaustFragment",
          true,
          "//host#0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        U{"PathAbemptyFragmentBadFragment", false, "//host##"},
        U{"PathAbemptyFragmentBadCaret", false, "//host#^"},
        U{"PathAbemptyFragmentBadControlCharacter", false, "//host#\x1F"},
        U{"PathAbemptyFragmentBadPctEncoding", false, "//host#%"},
        U{"PathAbemptyExhaustQuery",
          true,
          "//host?0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?"},
        U{"PathAbemptyQueryBadCaret", false, "//host?^"},
        U{"PathAbemptyQueryBadPctEncoded", false, "//host?%"},
        U{"PathAbemptyQueryBadControlCharacter", false, "//host?\x1F"},
        U{"PathAbemptyExhaustUserinfo",
          true,
          "//0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~!$&'()*+,;=::@example.com"},
        U{"PathAbemptyPort", true, "//host:8080"},
        U{"PathAbemptyIpv4", true, "//127.0.0.1"},
        U{"PathAbemptyIpv6", true, "//[::1]"},
        U{"PathAbsolute", true, "/"},
        U{"PathAbsoluteSegmentNz", true, "/nz"},
        U{"PathAbsoluteSegmentNzMatchesColon", true, "/:"},
        U{"PathAbsoluteSegmentNzBadCaret", false, "/^"},
        U{"PathAbsoluteSegmentNzBadControlCharacter", false, "/\x1F"},
        U{"PathAbsoluteSegmentNzBadPctEncoded", false, "/%x"},
        U{"PathAbsoluteSegmentNzPctEncodedAscii", true, "/%61%20%23"},
        U{"PathAbsoluteSegmentNzPctEncodedUtf8", true, "/%c3%96"},
        U{"PathAbsoluteSegmentNzPctEncodedInvalidUtf8", true, "/%c3x%96"},
        U{"PathAbsoluteExhaustSegmentNz",
          true,
          "/@%20!$&()*+,;=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~:"},
        U{"PathAbsoluteSegmentEmptyPchar", true, "/nz/"},
        U{"PathAbsoluteSegmentBadCaret", false, "/nz/^"},
        U{"PathAbsoluteSegmentBadControlCharacter", false, "/nz/\x1F"},
        U{"PathAbsoluteSegmentBadPctEncoded", false, "/nz/%x"},
        U{"PathAbsoluteSegmentPctEncodedAscii", true, "/nz/%61%20%23"},
        U{"PathAbsoluteSegmentPctEncodedUtf8", true, "/nz/%c3%96"},
        U{"PathAbsoluteSegmentPctEncodedInvalidUtf8", true, "/nz/%c3x%96"},
        U{"PathAbsoluteExhaustSegment",
          true,
          "/nz/0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&()*+,;=:@"},
        U{"PathAbsoluteWithQueryA", true, "/?baz=quux"},
        U{"PathAbsoluteWithQueryB", true, "/foo/bar?baz=quux"},
        U{"PathAbsoluteWithFragmentA", true, "/#frag"},
        U{"PathAbsoluteWithFragmentB", true, "/foo/bar#frag"},
        U{"PathAbsoluteBadControlCharacter", false, "/foo/\x1F"},
        U{"PathAbsoluteExhaustFragment",
          true,
          "/#0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        U{"PathAbsoluteFragmentBadFragment", false, "/##"},
        U{"PathAbsoluteFragmentBadCaret", false, "/#^"},
        U{"PathAbsoluteFragmentBadControlCharacter", false, "/#\x1F"},
        U{"PathAbsoluteFragmentBadPctEncoding", false, "/#%"},
        U{"PathAbsoluteExhaustQuery",
          true,
          "/?0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?"},
        U{"PathAbsoluteQueryBadCaret", false, "/?^"},
        U{"PathAbsoluteQueryBadPctEncoded", false, "/?%"},
        U{"PathAbsoluteQueryBadControlCharacter", false, "/?\x1F"},
        U{"PathNoschemeA", true, "./foo/bar"},
        U{"PathNoschemeB", true, "*"},
        U{"PathNoschemeC", true, "./foo"},
        U{"PathNoschemeSegmentNzBadColon", false, ":"},
        U{"PathNoschemeSegmentNzBadCaret", false, "^"},
        U{"PathNoschemeSegmentNzBadControlCharacter", false, "\x1F"},
        U{"PathNoschemeSegmentNzBadPctEncoded", false, "%x"},
        U{"PathNoschemeSegmentNzPctEncodedAscii", true, "%61%20%23"},
        U{"PathNoschemeSegmentNzPctEncodedUtf8", true, "%c3%96"},
        U{"PathNoschemeSegmentNzPctEncodedInvalidUtf8", true, "%c3x%96"},
        U{"PathNoschemeExhaustSegmentNzNc",
          true,
          "@%20!$&()*+,;=0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~"},
        U{"PathNoschemeSegmentEmptyPchar", true, "./"},
        U{"PathNoschemeSegmentBadCaret", false, "./^"},
        U{"PathNoschemeSegmentBadControlCharacter", false, "./\x1F"},
        U{"PathNoschemeSegmentBadPctEncoded", false, "./%x"},
        U{"PathNoschemeSegmentPctEncodedAscii", true, "./%61%20%23"},
        U{"PathNoschemeSegmentPctEncodedUtf8", true, "./%c3%96"},
        U{"PathNoschemeSegmentPctEncodedInvalidUtf8", true, "./%c3x%96"},
        U{"PathNoschemeExhaustSegment",
          true,
          "./0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ%20!$&'()*+,;=:@%20"},
        U{"PathNoschemeMultipleSegmentsA", true, ".///"},
        U{"PathNoschemeMultipleSegmentsB", true, "./a/b/c"},
        U{"PathNoschemeMultipleSegmentsC", true, "./a/b/c/"},
        U{"PathNoschemeWithQueryA", true, ".?baz=quux"},
        U{"PathNoschemeWithQueryB", true, "./foo/bar?baz=quux"},
        U{"PathNoschemeWithFragmentA", true, ".#frag"},
        U{"PathNoschemeWithFragmentB", true, "./foo/bar#frag"},
        U{"PathNoschemeBadControlCharacter", false, "./foo/\x1F"},
        U{"PathNoschemeExhaustFragment",
          true,
          ".#0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        U{"PathNoschemeFragmentBadFragment", false, ".##"},
        U{"PathNoschemeFragmentBadCaret", false, ".#^"},
        U{"PathNoschemeFragmentBadControlCharacter", false, ".#\x1F"},
        U{"PathNoschemeFragmentBadPctEncoded", false, ".#%"},
        U{"PathNoschemeExhaustQuery",
          true,
          ".?0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?"},
        U{"PathNoschemeQueryBadCaret", false, ".?^"},
        U{"PathNoschemeQueryBadPctEncoded", false, ".?%"},
        U{"PathNoschemeQueryBadControlCharacter", false, ".?\x1F"},
        U{"PathEmpty", true, ""},
        U{"PathEmptyExhaustFragment",
          true,
          "#0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?/"},
        U{"PathEmptyFragmentBadFragment", false, "##"},
        U{"PathEmptyFragmentBadCaret", false, "#^"},
        U{"PathEmptyFragmentBadControlCharacter", false, "#\x1F"},
        U{"PathEmptyFragmentBadPctEncoded", false, "#%"},
        U{"PathEmptyExhaustQuery",
          true,
          "?0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-._~%20!$&'()*+,=;:@?"},
        U{"PathEmptyQueryBadCaret", false, "?^"},
        U{"PathEmptyQueryBadPctEncoded", false, "?%"},
        U{"PathEmptyQueryBadControlCharacter", false, "?\x1F"}),
    [](const auto& info) { return info.param.name; });

} // namespace
} // namespace buf::validate::internal::lib
